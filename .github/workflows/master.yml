---
name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  repository_dispatch:
    types: rebuild

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        python-version: ["3.8", "3.9"]

    steps:
      - uses: "actions/checkout@v2"
      - name: "Setup miniconda"
        uses: "conda-incubator/setup-miniconda@v2"
        with:
          auto-update-conda: true
          python-version: "${{ matrix.python-version }}"
          channels: "conda-forge,anaconda"
      - name: "Install dependencies"
        run: |
          set -xe
          which python
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools
          python -m pip install --upgrade pytest tox tox-conda tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: |
          python -m pytest --version
          python -m tox -v

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-20.04"
 
    steps:
      - name: "Check out range-streams"
        uses: "actions/checkout@v2"

      - name: "Setup miniconda"
        uses: "conda-incubator/setup-miniconda@v2"
        with:
          auto-update-conda: true
          python-version: "3.9"
          channels: "conda-forge,anaconda"

      - name: "Install build, and check-wheel-content"
        run: "python -m pip install build check-wheel-contents"

      - name: "Build package"
        run: "python -m build --sdist --wheel ."

      - name: "List result"
        run: "ls -l dist"

      - name: "Check wheel contents"
        run: "check-wheel-contents dist/*.whl"

  install-dev:
    strategy:
      matrix:
        os: ["ubuntu-20.04"]

    name: "Verify dev env"
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v2"
      - name: "Setup miniconda"
        uses: "conda-incubator/setup-miniconda@v2"
        with:
          auto-update-conda: true
          python-version: "3.8"
          channels: "conda-forge,anaconda"
      - name: "Install in dev mode"
        run: |
          which python
          echo -e "\nStart of /usr/share/\n"
          ls /usr/share/
          echo -e "\nStart of .\n"
          ls -l .
          python -m pip install -e .[dev]
      - name: "Import package"
        run: "python -c 'import range_streams; print(range_streams)'"
